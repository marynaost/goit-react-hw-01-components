{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/StatisticsItem.module.css","components/FriendList/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistics/StatisticsItem.js","helpers/onGetRandomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistoryItem.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","styles","profile","description","src","alt","name","item","label","quantity","followers","views","likes","StatisticsItem","percentage","onGetRandomColor","r","Math","floor","random","b","g","Statistics","title","statistics","list","map","stat","style","backgroundColor","id","propType","PropTypes","string","arrayOf","shape","isRequired","number","FriendListItem","isOnline","status","width","FriendList","friends","friend","TransactionHistoryItem","type","amount","currency","TransactionHistory","items","container","thead","line","App","user","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47455c56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__W_xWM\",\"description\":\"Profile_description__2tGF8\",\"avatar\":\"Profile_avatar__2fXxK\",\"name\":\"Profile_name__3qSfh\",\"quantity\":\"Profile_quantity__2CBXD\",\"tag\":\"Profile_tag__FZSyu\",\"location\":\"Profile_location__3ib98\",\"label\":\"Profile_label__25sgC\",\"stats\":\"Profile_stats__L6jaY\",\"item\":\"Profile_item__3zvqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"StatisticsItem_statistics__30bfg\",\"title\":\"StatisticsItem_title__2qxZA\",\"list\":\"StatisticsItem_list__1RfyP\",\"item\":\"StatisticsItem_item__Nazai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__1QTQf\",\"avatar\":\"FriendListItem_avatar__3PIMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TransactionHistory_container__3WjLX\",\"thead\":\"TransactionHistory_thead__Vh8Ab\",\"line\":\"TransactionHistory_line__2nmKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__1NY-J\",\"item\":\"FriendList_item__q6A7z\"};","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nfunction Profile({ username, tag, location, avatar, stats }) {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt=\"User avatar\" className={styles.avatar} />\n        <p className={styles.name}>{username}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.item}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\n\nfunction StatisticsItem({ label, percentage }) {\n  return (\n    <>\n      <span>{label}</span>\n      <span>{percentage}%</span>\n    </>\n  );\n}\n\nStatisticsItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default StatisticsItem;\n","function onGetRandomColor() {\n  const r = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  return `rgb(${r}, ${g}, ${b})`;\n}\n\nexport default onGetRandomColor;\n","import PropTypes from 'prop-types';\nimport StatisticsItem from './StatisticsItem';\nimport onGetRandomColor from 'helpers/onGetRandomColor';\nimport styles from './StatisticsItem.module.css';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={styles.statistics}>\n      <h2 className={styles.title}>{title ?? 'Upload stats'}</h2>\n      <ul className={styles.list}>\n        {stats.map(stat => (\n          <li\n            key={stat.id}\n            className={styles.item}\n            style={{ backgroundColor: onGetRandomColor() }}\n          >\n            <StatisticsItem label={stat.label} percentage={stat.percentage} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propType = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nfunction FriendListItem({ isOnline, avatar, name }) {\n  return (\n    <>\n      <span\n        className={styles.status}\n        style={{ backgroundColor: isOnline ? isOnline : 'red' }}\n      >\n        {isOnline}\n      </span>\n      <img\n        className={styles.avatar}\n        src={avatar}\n        alt=\"User avatar\"\n        width=\"48\"\n      />\n      <p className={styles.name}>{name}</p>\n    </>\n  );\n}\n\nFriendListItem.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={styles.list}>\n      {friends.map(friend => (\n        <li key={friend.id} className={styles.item}>\n          <FriendListItem\n            isOnline={friend.isOnline}\n            avatar={friend.avatar}\n            name={friend.name}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      name: PropTypes.string,\n      avatar: PropTypes.string,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\n\nfunction TransactionHistoryItem({ type, amount, currency }) {\n  return (\n    <>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </>\n  );\n}\n\nTransactionHistoryItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionHistoryItem;\n","import PropTypes from 'prop-types';\nimport TransactionHistoryItem from './TransactionHistoryItem';\nimport styles from './TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={styles.container}>\n      <thead className={styles.thead}>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id} className={styles.line}>\n            <TransactionHistoryItem\n              type={item.type}\n              amount={item.amount}\n              currency={item.currency}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from 'components/Profile/Profile';\nimport Statistics from 'components/Statistics/Statistics';\nimport FriendList from 'components/FriendList/FriendList';\nimport TransactionHistory from 'components/TransactionHistory/TransactionHistory';\n\nimport user from 'components/Profile/user.json';\nimport data from 'components/Statistics/data.json';\nimport friends from 'components/FriendList/friends.json';\nimport transactions from 'components/TransactionHistory/transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}